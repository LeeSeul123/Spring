<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!--  <context:property-placeholder location="classpath:config/db.properties"/>-->
	
	<!-- jasypt(암호라이브러리) 환경변수 저장 -->
	<bean id="environmentVariablesConfiguration"
     class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
   		<property name="algorithm" value="PBEWithMD5AndDES" />
   		<!-- Key 값 : 프로젝트 내 어디에도 존재하면 안됨 -->
   		<property name="password" value="${jasypt.encryptor.password}" />
 	</bean>
 	
 	<!-- jasypt(암호라이브러리) 암호화 작업, 해석 자체를 해주는 bean-->
 	<bean id="configurationEncryptor"
     class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
   		<property name="config" ref="environmentVariablesConfiguration" />
 	</bean>
 	
 	<!-- jasypt(암호라이브러리) Properties 파일읽고 암호를 해석하고 던지는 bean -->
 	 <bean id="propertyConfigurer"
     class="org.jasypt.spring31.properties.EncryptablePropertyPlaceholderConfigurer">
   		<constructor-arg ref="configurationEncryptor" />
   		<property name="locations">
     		<list>
       			<value>classpath:config/db.properties</value>
       			<!-- list라서 원하는 만큼 추가 가능 -->
     		</list>
   		</property>
 	</bean>

	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<!-- value안에 db.properties내부의 값 가져옴 -->
		<property name="driverClassName" value="${driver}" />
		<property name="jdbcUrl" value="${url}" />
		<property name="username" value="${userid}" />
		<property name="password" value="${userpwd}" />
	</bean>
	
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" 
	destroy-method="close">
		<!-- 생성자 주입.이미 생성된 bean을 주입 -->
		<constructor-arg ref="hikariConfig" />
	</bean>
	
	<!-- 자바 외의 파일(설정파일) 분리 추세. 분리 시 mapperLocations써야함 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:config/mybatis-config.xml"/>
		<property name="mapperLocations" value="classpath*:com/yedam/web/**/mapper/*Mapper.xml"/>
	</bean>
	
	<!-- mapper scan -->
	<mybatis-spring:scan base-package="com.yedam.web.**.mapper" />

</beans>
